## Default values for brigade
## This is a YAML-formatted file.
## Declare variables to be passed into your templates.

rbac:
  ## Indicates whether relevant cluster-scoped roles should be installed/updated
  ## by this chart. Set to false if this is NOT the first install of brigade in
  ## a given cluster, otherwise this chart will attempt to create resources that
  ## already exist.
  installGlobalResources: true

## All settings for the API server
apiserver:

  replicas: 1

  ## Host should be set accurately for a variety of reasons. This is used in
  ## ingress resources, cert generation, and in creating URLs for Open ID
  ## Connect "three legged" authentication.
  host: localhost:31600

  image:
    repository: brigadecore/brigade2-apiserver
    ## tag should only be specified if you want to override Chart.appVersion
    ## The default tag is the value of .Chart.AppVersion
    # tag:
    pullPolicy: IfNotPresent

  rootUser:
    enabled: true

    ## The root user password will be an auto-generated random string when not
    ## supplied. See NOTES.txt after deployment for retrieval steps.
    # password:

    ## Session TTL dictates the default time-to-live for the root user session.
    ## Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
    ## For example, "60s", "2h45m", "168h" (1 week)
    sessionTTL: 1h

  ## Options for authenticating via a third-party authentication provider.
  thirdPartyAuth:
    ## Valid values are "oidc" (for OpenID Connect), "github" (for OAuth2 with
    ## GitHub as the identity provider), or "disabled"
    strategy: disabled
    ## OpenId Connect configuration. Only applicable when thirdPartyAuth == oidc
    ## OpenID Connect support REQUIRES TLS to be enabled.
    oidc:
      ## ProviderURL examples:
      ##
      ##   Google Identity Platform:
      ##     https://accounts.google.com
      ##
      ##   Azure Active Directory: 
      ##     https://login.microsoftonline.com/{tenant id}/v2.0
      ##
      ## Any OpenID Connect provider SHOULD work, but we've tested with those
      ## above.
      # providerURL: ""
      ## The API server uses the client ID and client secret to authenticate
      ## itself to the OpenID Connect identity provider.
      # clientID: ""
      # clientSecret: ""
    github:
      ## The API server uses the client ID and client secret to authenticate
      ## itself to GitHub.
      # clientID: ""
      # clientSecret: ""
      ## GitHub lacks the sophisticated access controls available in identity
      ## platforms like Google Identity Platform and Azure Active Directory--
      ## controls that could be used to limit who can successfully authenticate
      ## to Brigade. Given this, allowedOrganizations below can be used to
      ## enumerate the GitHub organizations whose members are permitted to
      ## authenticate to Brigade. If this list is left commented or empty,
      ## access will not be restricted by organization.
      # allowedOrganizations: []
    ## User Session TTL dictates the default time-to-live for user sessions.
    ## Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
    ## For example, "60s", "2h45m", "168h" (1 week)
    userSessionTTL: 168h
    ## List user IDs from third-party identity provider (email address if using
    ## OpenID Connect or GitHub handle if using GitHub) who will AUTOMATICALLY
    ## be granted system admin permissions the first time they log in. This is
    ## useful for automating post-install setup. Absent this option, one would
    ## have to log in, log out, log back in as root, grant themselves
    ## permissions, then log out, then log back in as themselves.
    admins: []

  tls:
    ## Whether to enable TLS. If true then you MUST do ONE of three things to
    ## ensure the existence of a TLS certificate:
    ##
    ## 1. Set generateSelfSignedCert below to true (the default)
    ## 2. OR Set values for BOTH the cert and key fields below
    ## 3. OR create a cert secret named <Helm release name>-apiserver-cert in
    ##    the same namespace as Brigade. This secret could be created manually
    ##    or through other means, such as a cert manager.
    ##
    ## TLS SHOULD always be enabled, even when ingress is used because other
    ## components within the Kubernetes cluster (e.g. Brigade gateways) will
    ## interact with the apiserver and will not go through the ingress
    ## controller to do so, but SHOULD still interact over a secure connection.
    ## It is advised that this be disabled ONLY if utilizing a service mesh to
    ## enforce secure connections to the apiserver for you.
    enabled: true
    ## Whether to generate a self-signed certificate. If true, a new certificate
    ## will be generated for every revision of the corresponding Helm release.
    ## Since the certificate is self-signed, it will not be trusted by clients
    ## and should absolutely not be used for production, but having this enabled
    ## as a default effectively discourages the more heavy-handed option to
    ## disable TLS entirely. If TLS is enabled and cert generation is DISABLED,
    ## users MUST provide their own cert and private key below OR create a cert
    ## secret named <Helm release name>-apiserver-cert in the same namespace as
    ## Brigade.
    generateSelfSignedCert: true
    # cert: base 64 encoded cert goes here
    # key: base 64 encoded key goes here

  ingress:
    ## Whether to enable ingress. By default, this is disabled and the
    ## apiserver's service is of type LoadBalancer instead. Enabling ingress is
    ## advanced usage.
    enabled: false
    ## Optionally use annotations specified by your ingress controller's
    ## documentation to customize the behavior of the ingress resource.
    annotations:
      # kubernetes.io/ingress.class: nginx
    ## From Kubernetes 1.18+ this field is supported in case your ingress controller supports it.
    ## When set, you do not need to add the ingress class as annotation.
    ingressClassName:
    tls:
      ## Whether to enable TLS. If true then you MUST do ONE of three things to
      ## ensure the existence of a TLS certificate:
      ##
      ## 1. Set generateSelfSignedCert below to true (the default)
      ## 2. OR Set values for BOTH the cert and key fields below
      ## 3. OR create a cert secret named
      ##    <Helm release name>-apiserver-ingress-cert in the same namespace as
      ##    Brigade. This secret could be created manually or through other
      ##    means, such as a cert manager.
      ##
      ## Note there is a wide disparity in the feature set of various ingress
      ## controllers and some ingress controllers may be able to provision a
      ## certificate for you even with TLS disabled here. Consult your ingress
      ## controller's documentation.
      enabled: true
      ## Whether to generate a self-signed certificate. If true, a new
      ## certificate will be generated for every revision of the corresponding
      ## Helm release. Since the certificate is self-signed, it will not be
      ## trusted by clients and should absolutely not be used for production,
      ## but having this enabled as a default effectively discourages the more
      ## heavy-handed option to disable TLS entirely. If ingress TLS is enabled
      ## and cert generation is DISABLED, users MUST provide their own cert and
      ## private key below OR create a cert secret named
      ## <Helm release name>-apiserver-ingres-cert in the same namespace as
      ## Brigade.
      generateSelfSignedCert: true
      # cert: base 64 encoded cert goes here
      # key: base 64 encoded key goes here

  resources: {}
    # We usually recommend not to specify default resources and to leave this as
    # a conscious choice for the user. This also increases chances charts run on
    # environments with little resources, such as Minikube. If you do want to
    # specify resources, uncomment the following lines, adjust them as
    # necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  service:
    ## If you're going to use an ingress controller, you can change the service
    ## type to CLusterIP.
    type: LoadBalancer
    ## Host port the service will be mapped to when service type is either
    ## NodePort or LoadBalancer. If not specified, Kubernetes chooses.
    # nodePort: 31600

scheduler:

  image:
    repository: brigadecore/brigade2-scheduler
    ## tag should only be specified if you want to override Chart.appVersion
    ## The default tag is the value of .Chart.AppVersion
    # tag:
    pullPolicy: IfNotPresent

  tls:
    ignoreCertWarnings: true

  scheduling:
    maxConcurrentWorkers: 2
    maxConcurrentJobs: 8

  resources: {}
    # We usually recommend not to specify default resources and to leave this as
    # a conscious choice for the user. This also increases chances charts run on
    # environments with little resources, such as Minikube. If you do want to
    # specify resources, uncomment the following lines, adjust them as
    # necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

observer:

  image:
    repository: brigadecore/brigade2-observer
    ## tag should only be specified if you want to override Chart.appVersion
    ## The default tag is the value of .Chart.AppVersion
    # tag:
    pullPolicy: IfNotPresent

  tls:
    ignoreCertWarnings: true

  config:
    ## maxWorkerLifetime dictates the maximum amount of time that a worker
    ## is permitted to run, assuming no timeout has been set on the worker itself.
    ## (Default is 24 hours)
    ## Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
    ## For example, "60s", "2h45m", "168h" (1 week)
    # maxWorkerLifetime:
    ## maxJobLifetime dictates the maximum amount of time that a job
    ## is permitted to run, assuming no timeout has been set on the job itself.
    ## (Default is 24 hours)
    ## Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
    ## For example, "60s", "2h45m", "168h" (1 week)
    # maxJobLifetime:
    ## delayBeforeCleanup dictates the length of the grace period between when
    ## a worker or job pod completes and when it is permanently cleaned up.
    ## This can be increased in a busy cluster to give log agents a better
    ## chance of capturing all logs before pods are deleted forever. Its also a
    ## useful value to adjust when troubleshooting.
    ## (Default is 1 minute)
    ## Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
    ## For example, "60s", "2h45m", "168h" (1 week)
    # delayBeforeCleanup: 

gitInitializer:

  image:
    repository: brigadecore/brigade2-git-initializer
    ## tag should only be specified if you want to override Chart.appVersion
    ## The default tag is the value of .Chart.AppVersion
    # tag:
    pullPolicy: IfNotPresent

worker:

  image:
    repository: brigadecore/brigade2-worker
    ## tag should only be specified if you want to override Chart.appVersion
    ## The default tag is the value of .Chart.AppVersion
    # tag:
    pullPolicy: IfNotPresent

  workspaceStorageClass: nfs

  # Optional nodeSelector key/value for all worker and job pods, for scheduling
  # on nodes reserved for Brigade workloads.
  #
  # For more details, see
  # https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector
  #
  # Example:
  # nodeSelector:
  #   key: brigadehost
  #   value: true
  # This will match any/all nodes with the 'brigadehost=true' label.
  nodeSelector:
    # key:
    # value:

  # Optional toleration key/value for all worker and job pods, for tolerating
  # (i.e. allowing to schedule on) nodes specifically intended to run Brigade
  # workloads.
  #
  # Notes:
  # If only a key is supplied, the toleration operator field will be set to
  # "Exists", meaning any value is permitted for that key.
  # If both a key and value are supplied, the toleration operator will be set
  # to "Equal", meaning the key and value must match.
  # In either case, the toleration effect field is left empty, matching all
  # effects for the supplied key.
  #
  # For more details, see
  # https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
  #
  # Example:
  # toleration:
  #   key: brigadehost
  # This will allow scheduling an any/all nodes tainted with
  # 'brigadehost=<value>:<effect>', for any value and any effect.
  # (Operator = "Exists")
  #
  # Example:
  # toleration:
  #   key: brigadehost
  #   value: true
  # This will allow scheduling an any/all nodes tainted with
  # 'brigadehost=true:<effect>', for any effect. (Operator = "Equal")
  toleration:
    # key:
    # value:

logger:

  linux:

    image:
      repository: brigadecore/brigade2-logger-linux
      ## tag should only be specified if you want to override Chart.appVersion
      ## The default tag is the value of .Chart.AppVersion
      # tag:
      pullPolicy: IfNotPresent

    resources: {}
      # We usually recommend not to specify default resources and to leave this
      # as a conscious choice for the user. This also increases chances charts
      # run on environments with little resources, such as Minikube. If you do
      # want to specify resources, uncomment the following lines, adjust them as
      # necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi

    nodeSelector:
      kubernetes.io/os: linux

    tolerations: []

  windows:

    image:
      repository: brigadecore/brigade2-logger-windows
      ## tag should only be specified if you want to override Chart.appVersion
      ## The default tag is the value of .Chart.AppVersion
      # tag:
      pullPolicy: IfNotPresent

    resources: {}
      # We usually recommend not to specify default resources and to leave this
      # as a conscious choice for the user. This also increases chances charts
      # run on environments with little resources, such as Minikube. If you do
      # want to specify resources, uncomment the following lines, adjust them as
      # necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi

    nodeSelector:
      kubernetes.io/os: windows

    tolerations:
    - effect: NoSchedule
      key: os
      operator: Equal
      value: windows

externalMongodb:

  isCosmosdb: false
  connectionString: mongodb://<username>:<password>@<host>:<port>/<database>?<options>
  database: <database>

mongodb:

  enabled: true

  ## Global Docker image parameters
  ## Please, note that this will override the image parameters, including dependencies, configured to use the global value
  ## Current available global Docker image parameters: imageRegistry and imagePullSecrets
  ##
  # global:
  #   imageRegistry: myRegistryName
  #   imagePullSecrets:
  #     - myRegistryKeySecretName
  #   storageClass: myStorageClass
  ## Override the namespace for resource deployed by the chart, but can itself be overridden by the local namespaceOverride
  #   namespaceOverride: my-global-namespace

  image:
    ## Bitnami MongoDB registry
    ##
    registry: docker.io
    ## Bitnami MongoDB image name
    ##
    repository: bitnami/mongodb
    ## Bitnami MongoDB image tag
    ## ref: https://hub.docker.com/r/bitnami/mongodb/tags/
    ##
    tag: 4.4.3-debian-10-r0
    ## Specify a imagePullPolicy
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ##
    # pullSecrets:
    #   - myRegistryKeySecretName

    ## Set to true if you would like to see extra information on logs
    ## It turns on Bitnami debugging in minideb-extras-base
    ## ref:  https://github.com/bitnami/minideb-extras-base
    debug: false

  ## String to partially override mongodb.fullname template (will maintain the release name)
  ##
  # nameOverride:

  ## String to fully override mongodb.fullname template
  ##
  # fullnameOverride:

  ## Kubernetes Cluster Domain
  ##
  clusterDomain: cluster.local

  ## Use an alternate scheduler, e.g. "stork".
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  # schedulerName:

  ## MongoDB architecture. Allowed values: standalone or replicaset
  ##
  architecture: replicaset

  ## Use StatefulSet instead of Deployment when deploying standalone
  ##
  useStatefulSet: false

  ## MongoDB Authentication parameters
  ##
  auth:
    ## Enable authentication
    ## ref: https://docs.mongodb.com/manual/tutorial/enable-authentication/
    ##
    enabled: true
    ## MongoDB root password
    ## ref: https://github.com/bitnami/bitnami-docker-mongodb/blob/master/README.md#setting-the-root-password-on-first-run
    ##
    rootPassword: "FOOBAR"
    ## MongoDB custom user and database
    ## ref: https://github.com/bitnami/bitnami-docker-mongodb/blob/master/README.md#creating-a-user-and-database-on-first-run
    ##
    username: brigade
    password: foobar
    database: brigade
    ## Key used for replica set authentication
    ## Ignored when mongodb.architecture=standalone
    ##
    replicaSetKey: "abcdefg"

    ## Existing secret with MongoDB credentials
    ## NOTE: When it's set the previous parameters are ignored.
    ##
    # existingSecret: name-of-existing-secret

  tls:
    ## Enable or disable MongoDB TLS Support
    enabled: false

    ## Existing secret with MongoDB TLS certificates
    ## NOTE: When it's set it will disable certificate creation
    ##
    # existingSecret: name-of-existing-secret

    ## Add Custom CA certificate
    # caCert: base64 encoded ca certificate
    # caKey: base64 encoded private key
    ##
    ## Bitnami Nginx image
    ##
    image:
      registry: docker.io
      repository: bitnami/nginx
      tag: 1.19.6-debian-10-r6
      pullPolicy: IfNotPresent

  ## Name of the replica set
  ## Ignored when mongodb.architecture=standalone
  ##
  replicaSetName: rs0

  ## Enable DNS hostnames in the replica set config
  ## Ignored when mongodb.architecture=standalone
  ## Ignored when externalAccess.enabled=true
  ##
  replicaSetHostnames: true

  ## Whether enable/disable IPv6 on MongoDB
  ## ref: https://github.com/bitnami/bitnami-docker-mongodb/blob/master/README.md#enabling/disabling-ipv6
  ##
  enableIPv6: false

  ## Whether enable/disable DirectoryPerDB on MongoDB
  ## ref: https://github.com/bitnami/bitnami-docker-mongodb/blob/master/README.md#enabling/disabling-directoryperdb
  ##
  directoryPerDB: false

  ## MongoDB System Log configuration
  ## ref: https://github.com/bitnami/bitnami-docker-mongodb#configuring-system-log-verbosity-level
  ##
  systemLogVerbosity: 0
  disableSystemLog: false

  ## MongoDB configuration file for Primary and Secondary nodes. For documentation of all options, see:
  ##   http://docs.mongodb.org/manual/reference/configuration-options/
  ## Example:
  ## configuration: |-
  ##   # where and how to store data.
  ##   storage:
  ##     dbPath: /bitnami/mongodb/data/db
  ##     journal:
  ##       enabled: true
  ##     directoryPerDB: false
  ##   # where to write logging data
  ##   systemLog:
  ##     destination: file
  ##     quiet: false
  ##     logAppend: true
  ##     logRotate: reopen
  ##     path: /opt/bitnami/mongodb/logs/mongodb.log
  ##     verbosity: 0
  ##   # network interfaces
  ##   net:
  ##     port: 27017
  ##     unixDomainSocket:
  ##       enabled: true
  ##       pathPrefix: /opt/bitnami/mongodb/tmp
  ##     ipv6: false
  ##     bindIpAll: true
  ##   # replica set options
  ##   #replication:
  ##     #replSetName: replicaset
  ##     #enableMajorityReadConcern: true
  ##   # process management options
  ##   processManagement:
  ##      fork: false
  ##      pidFilePath: /opt/bitnami/mongodb/tmp/mongodb.pid
  ##   # set parameter options
  ##   setParameter:
  ##      enableLocalhostAuthBypass: true
  ##   # security options
  ##   security:
  ##     authorization: disabled
  ##     #keyFile: /opt/bitnami/mongodb/conf/keyfile
  ##
  configuration: ""

  ## ConfigMap with MongoDB configuration for Primary and Secondary nodes
  ## NOTE: When it's set the arbiter.configuration parameter is ignored
  ##
  # existingConfigmap:

  ## initdb scripts
  ## Specify dictionary of scripts to be run at first boot
  ## Example:
  ## initdbScripts:
  ##   my_init_script.sh: |
  ##      #!/bin/bash
  ##      echo "Do something."
  initdbScripts: {}

  ## Existing ConfigMap with custom init scripts
  ##
  # initdbScriptsConfigMap:

  ## Command and args for running the container (set to default if not set). Use array form
  ##
  # command:
  # args:

  ## Additional command line flags
  ## Example:
  ## extraFlags:
  ##  - "--wiredTigerCacheSizeGB=2"
  ##
  extraFlags: []

  ## Additional environment variables to set
  ## E.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: BAR
  ##
  extraEnvVars: []

  ## ConfigMap with extra environment variables
  ##
  # extraEnvVarsCM:

  ## Secret with extra environment variables
  ##
  # extraEnvVarsSecret:

  ## Annotations to be added to the MongoDB statefulset. Evaluated as a template.
  ##
  annotations: {}

  ## Additional labels to be added to the MongoDB statefulset. Evaluated as a template.
  ##
  labels: {}

  ## Number of MongoDB replicas to deploy.
  ## Ignored when mongodb.architecture=standalone
  ##
  replicaCount: 1

  ## StrategyType for MongoDB statefulset
  ## It can be set to RollingUpdate or Recreate by default.
  ##
  strategyType: RollingUpdate

  ## MongoDB should be initialized one by one when building the replicaset for the first time.
  ##
  podManagementPolicy: OrderedReady

  ## Pod affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ## Allowed values: soft, hard
  ##
  podAffinityPreset: ""

  ## Pod anti-affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ## Allowed values: soft, hard
  ##
  podAntiAffinityPreset: soft

  ## Node affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ## Allowed values: soft, hard
  ##
  nodeAffinityPreset:
    ## Node affinity type
    ## Allowed values: soft, hard
    type: ""
    ## Node label key to match
    ## E.g.
    ## key: "kubernetes.io/e2e-az-name"
    ##
    key: ""
    ## Node label values to match
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []

  ## Affinity for pod assignment. Evaluated as a template.
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## Note: podAffinityPreset, podAntiAffinityPreset, and nodeAffinityPreset will be ignored when it's set
  ##
  affinity: {}

  ## Node labels for pod assignment. Evaluated as a template.
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Tolerations for pod assignment. Evaluated as a template.
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []

  ## Labels for MongoDB pods. Evaluated as a template.
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}

  ## Annotations for MongoDB pods. Evaluated as a template.
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}

  ## MongoDB pods' priority.
  ## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
  ##
  # priorityClassName: ""

  ## MongoDB pods' Security Context.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 1001
    ## sysctl settings
    ## Example:
    ## sysctls:
    ## - name: net.core.somaxconn
    ##   value: "10000"
    ##
    sysctls: []

  ## MongoDB containers' Security Context (main and metrics container).
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 1001
    runAsNonRoot: true

  ## MongoDB containers' resource requests and limits.
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits: {}
    #   cpu: 100m
    #   memory: 128Mi
    requests: {}
    #   cpu: 100m
    #   memory: 128Mi

  ## MongoDB pods' liveness and readiness probes. Evaluated as a template.
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1

  ## Custom Liveness probes for MongoDB pods
  ## Ignored when livenessProbe.enabled=true
  ##
  customLivenessProbe: {}

  ## Custom Readiness probes MongoDB pods
  ## Ignored when readinessProbe.enabled=true
  ##
  customReadinessProbe: {}

  ## Add init containers to the MongoDB pods.
  ## Example:
  ## initContainers:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  initContainers: {}

  ## Add sidecars to the MongoDB pods.
  ## Example:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: {}

  ## extraVolumes and extraVolumeMounts allows you to mount other volumes on MongoDB pods
  ## Examples:
  ## extraVolumeMounts:
  ##   - name: extras
  ##     mountPath: /usr/share/extras
  ##     readOnly: true
  ## extraVolumes:
  ##   - name: extras
  ##     emptyDir: {}
  extraVolumeMounts: []
  extraVolumes: []

  ## MongoDB Pod Disruption Budget configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  ##
  pdb:
    create: false
    ## Min number of pods that must still be available after the eviction
    ##
    minAvailable: 1
    ## Max number of pods that can be unavailable after the eviction
    ##
    # maxUnavailable: 1

  ## Enable persistence using Persistent Volume Claims
  ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  persistence:
    enabled: true
    ## A manually managed Persistent Volume and Claim
    ## Requires persistence.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    ## Ignored when mongodb.architecture=replicaset
    ##
    # existingClaim:
    ## PV Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ## set, choosing the default provisioner.
    ##
    # storageClass: "-"
    ## PV Access Mode
    ##
    accessModes:
      - ReadWriteOnce
    ## PVC size
    ##
    size: 8Gi
    ## PVC annotations
    ##
    annotations: {}
    ## The path the volume will be mounted at, useful when using different
    ## MongoDB images.
    ##
    mountPath: /bitnami/mongodb
    ## The subdirectory of the volume to mount to, useful in dev environments
    ## and one PV for multiple services.
    ##
    subPath: ""
    ## Fine tuning for volumeClaimTemplates
    volumeClaimTemplates:
      ## A label query over volumes to consider for binding (e.g. when using local volumes)
      ## See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#labelselector-v1-meta for more details
      selector:

  ## Service parameters
  ##
  service:
    ## Service type
    ##
    type: ClusterIP
    ## MongoDB service port
    ##
    port: 27017
    ## MongoDB service port name
    ##
    portName: mongodb
    ## Specify the nodePort value for the LoadBalancer and NodePort service types.
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
    ##
    nodePort: ""
    ## MongoDB service clusterIP IP
    ##
    # clusterIP: None
    ## Specify the externalIP value ClusterIP service type.
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#external-ips
    ##
    externalIPs: []
    ## Specify the loadBalancerIP value for LoadBalancer service types.
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer
    ##
    # loadBalancerIP:
    ## Specify the loadBalancerSourceRanges value for LoadBalancer service types.
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ##
    loadBalancerSourceRanges: []
    ## Provide any additional annotations which may be required. Evaluated as a template
    ##
    annotations: {}

  ## External Access to MongoDB nodes configuration
  ##
  externalAccess:
    ## Enable Kubernetes external cluster access to MongoDB nodes
    ##
    enabled: false
    ## External IPs auto-discovery configuration
    ## An init container is used to auto-detect LB IPs or node ports by querying the K8s API
    ## Note: RBAC might be required
    ##
    autoDiscovery:
      ## Enable external IP/ports auto-discovery
      ##
      enabled: false
      ## Bitnami Kubectl image
      ## ref: https://hub.docker.com/r/bitnami/kubectl/tags/
      ##
      image:
        registry: docker.io
        repository: bitnami/kubectl
        tag: 1.18.13-debian-10-r12
        ## Specify a imagePullPolicy
        ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
        ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
        ##
        pullPolicy: IfNotPresent
        ## Optionally specify an array of imagePullSecrets (secrets must be manually created in the namespace)
        ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
        ## Example:
        ## pullSecrets:
        ##   - myRegistryKeySecretName
        ##
        pullSecrets: []
      ## Init Container resource requests and limits
      ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
      ##
      resources:
        # We usually recommend not to specify default resources and to leave this as a conscious
        # choice for the user. This also increases chances charts run on environments with little
        # resources, such as Minikube. If you do want to specify resources, uncomment the following
        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        limits: {}
        #   cpu: 100m
        #   memory: 128Mi
        requests: {}
        #   cpu: 100m
        #   memory: 128Mi
    ## Parameters to configure K8s service(s) used to externally access MongoDB
    ## A new service per broker will be created
    ##
    service:
      ## Service type. Allowed values: LoadBalancer or NodePort
      ##
      type: LoadBalancer
      ## Port used when service type is LoadBalancer
      ##
      port: 27017
      ## Array of load balancer IPs for each MongoDB node. Length must be the same as replicaCount
      ## Example:
      ## loadBalancerIPs:
      ##   - X.X.X.X
      ##   - Y.Y.Y.Y
      ##
      loadBalancerIPs: []
      ## Load Balancer sources
      ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
      ## Example:
      ## loadBalancerSourceRanges:
      ## - 10.10.10.0/24
      ##
      loadBalancerSourceRanges: []
      ## Array of node ports used for each MongoDB nodes. Length must be the same as replicaCount
      ## Example:
      ## nodePorts:
      ##   - 30001
      ##   - 30002
      ##
      nodePorts: []
      ## When service type is NodePort, you can specify the domain used for MongoDB advertised hostnames.
      ## If not specified, the container will try to get the kubernetes node external IP
      ##
      # domain: mydomain.com
      ## Provide any additional annotations which may be required. Evaluated as a template
      ##
      annotations: {}

  ##
  ## MongoDB Arbiter parameters.
  ##
  arbiter:
    ## Enable deploying the MongoDB Arbiter
    ##   https://docs.mongodb.com/manual/tutorial/add-replica-set-arbiter/
    enabled: false

    ## MongoDB configuration file for the Arbiter. For documentation of all options, see:
    ##   http://docs.mongodb.org/manual/reference/configuration-options/
    ##
    configuration: ""

    ## ConfigMap with MongoDB configuration for the Arbiter
    ## NOTE: When it's set the arbiter.configuration parameter is ignored
    ##
    # existingConfigmap:

    ## Command and args for running the container (set to default if not set). Use array form
    ##
    # command:
    # args:

    ## Additional command line flags
    ## Example:
    ## extraFlags:
    ##  - "--wiredTigerCacheSizeGB=2"
    ##
    extraFlags: []

    ## Additional environment variables to set
    ## E.g:
    ## extraEnvVars:
    ##   - name: FOO
    ##     value: BAR
    ##
    extraEnvVars: []

    ## ConfigMap with extra environment variables
    ##
    # extraEnvVarsCM:

    ## Secret with extra environment variables
    ##
    # extraEnvVarsSecret:

    ## Annotations to be added to the Arbiter statefulset. Evaluated as a template.
    ##
    annotations: {}

    ## Additional to be added to the Arbiter statefulset. Evaluated as a template.
    ##
    labels: {}

    ## Pod affinity preset
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ## Allowed values: soft, hard
    ##
    podAffinityPreset: ""

    ## Pod anti-affinity preset
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ## Allowed values: soft, hard
    ##
    podAntiAffinityPreset: soft

    ## Node affinity preset
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
    ## Allowed values: soft, hard
    ##
    nodeAffinityPreset:
      ## Node affinity type
      ## Allowed values: soft, hard
      type: ""
      ## Node label key to match
      ## E.g.
      ## key: "kubernetes.io/e2e-az-name"
      ##
      key: ""
      ## Node label values to match
      ## E.g.
      ## values:
      ##   - e2e-az1
      ##   - e2e-az2
      ##
      values: []

    ## Affinity for pod assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ## Note: arbiter.podAffinityPreset, arbiter.podAntiAffinityPreset, and arbiter.nodeAffinityPreset will be ignored when it's set
    ##
    affinity: {}

    ## Node labels for pod assignment
    ## ref: https://kubernetes.io/docs/user-guide/node-selection/
    ##
    nodeSelector: {}

    ## Tolerations for pod assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: []

    ## Labels for MongoDB Arbiter pods. Evaluated as a template.
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
    ##
    podLabels: {}

    ## Annotations for MongoDB Arbiter pods. Evaluated as a template.
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    podAnnotations: {}

    ## MongoDB Arbiter pods' priority.
    ## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
    ##
    # priorityClassName: ""

    ## MongoDB Arbiter pods' Security Context.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
    ##
    podSecurityContext:
      enabled: true
      fsGroup: 1001
      ## sysctl settings
      ## Example:
      ## sysctls:
      ## - name: net.core.somaxconn
      ##   value: "10000"
      ##
      sysctls: []

    ## MongoDB Arbiter containers' Security Context (only main container).
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
    ##
    containerSecurityContext:
      enabled: true
      runAsUser: 1001

    ## MongoDB Arbiter containers' resource requests and limits.
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ##
    resources:
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      limits: {}
      #   cpu: 100m
      #   memory: 128Mi
      requests: {}
      #   cpu: 100m
      #   memory: 128Mi

    ## MongoDB Arbiter pods' liveness and readiness probes. Evaluated as a template.
    ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
    ##
    livenessProbe:
      enabled: true
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1
    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1

    ## Custom Liveness probes for MongoDB Arbiter pods
    ## Ignored when arbiter.livenessProbe.enabled=true
    ##
    customLivenessProbe: {}

    ## Custom Readiness probes MongoDB Arbiter pods
    ## Ignored when arbiter.readinessProbe.enabled=true
    ##
    customReadinessProbe: {}

    ## Add init containers to the MongoDB Arbiter pods.
    ## Example:
    ## initContainers:
    ##   - name: your-image-name
    ##     image: your-image
    ##     imagePullPolicy: Always
    ##     ports:
    ##       - name: portname
    ##         containerPort: 1234
    ##
    initContainers: {}

    ## Add sidecars to the MongoDB Arbiter pods.
    ## Example:
    ## sidecars:
    ##   - name: your-image-name
    ##     image: your-image
    ##     imagePullPolicy: Always
    ##     ports:
    ##       - name: portname
    ##         containerPort: 1234
    ##
    sidecars: {}

    ## extraVolumes and extraVolumeMounts allows you to mount other volumes on MongoDB Arbiter pods
    ## Examples:
    ## extraVolumeMounts:
    ##   - name: extras
    ##     mountPath: /usr/share/extras
    ##     readOnly: true
    ## extraVolumes:
    ##   - name: extras
    ##     emptyDir: {}
    extraVolumeMounts: []
    extraVolumes: []

    ## MongoDB Arbiter Pod Disruption Budget configuration
    ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
    ##
    pdb:
      create: false
      ## Min number of pods that must still be available after the eviction
      ##
      minAvailable: 1
      ## Max number of pods that can be unavailable after the eviction
      ##
      # maxUnavailable: 1

  ## ServiceAccount
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  ##
  serviceAccount:
    ## Specifies whether a ServiceAccount should be created
    ##
    create: true
    ## The name of the ServiceAccount to use.
    ## If not set and create is true, a name is generated using the rabbitmq.fullname template
    ##
    # name:

  ## Role Based Access
  ## ref: https://kubernetes.io/docs/admin/authorization/rbac/
  ##
  rbac:
    ## Specifies whether RBAC rules should be created
    ## binding MongoDB ServiceAccount to a role
    ## that allows MongoDB pods querying the K8s API
    ##
    create: false

  ## Init Container parameters
  ## Change the owner and group of the persistent volume(s) mountpoint(s) to 'runAsUser:fsGroup' on each component
  ## values from the securityContext section of the component
  ##
  volumePermissions:
    enabled: false
    ## Bitnami Minideb image
    ## ref: https://hub.docker.com/r/bitnami/minideb/tags/
    ##
    image:
      registry: docker.io
      repository: bitnami/minideb
      tag: buster
      ## Specify a imagePullPolicy
      ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
      ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
      ##
      pullPolicy: Always
      ## Optionally specify an array of imagePullSecrets (secrets must be manually created in the namespace)
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ## Example:
      ## pullSecrets:
      ##   - myRegistryKeySecretName
      ##
      pullSecrets: []
    ## Init Container resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ##
    resources:
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      limits: {}
      #   cpu: 100m
      #   memory: 128Mi
      requests: {}
      #   cpu: 100m
      #   memory: 128Mi
    ## Init container Security Context
    ## Note: the chown of the data folder is done to containerSecurityContext.runAsUser
    ## and not the below volumePermissions.securityContext.runAsUser
    ## When runAsUser is set to special value "auto", init container will try to chwon the
    ## data folder to autodetermined user&group, using commands: `id -u`:`id -G | cut -d" " -f2`
    ## "auto" is especially useful for OpenShift which has scc with dynamic userids (and 0 is not allowed).
    ## You may want to use this volumePermissions.securityContext.runAsUser="auto" in combination with
    ## podSecurityContext.enabled=false,containerSecurityContext.enabled=false and shmVolume.chmod.enabled=false
    ##
    securityContext:
      runAsUser: 0

  ## Prometheus Exporter / Metrics
  ##
  metrics:
    enabled: false
    ## Bitnami MongoDB Promtheus Exporter image
    ## ref: https://hub.docker.com/r/bitnami/mongodb-exporter/tags/
    ##
    image:
      registry: docker.io
      repository: bitnami/mongodb-exporter
      tag: 0.20.1-debian-10-r18
      pullPolicy: IfNotPresent
      ## Optionally specify an array of imagePullSecrets.
      ## Secrets must be manually created in the namespace.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ##
      # pullSecrets:
      #   - myRegistryKeySecretName

    ## String with extra flags to the metrics exporter
    ## ref: https://github.com/percona/mongodb_exporter/blob/master/mongodb_exporter.go
    ##
    extraFlags: ""

    ## String with additional URI options to the metrics exporter
    ## ref: https://docs.mongodb.com/manual/reference/connection-string
    ##
    extraUri: ""

    ## Metrics exporter container resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ##
    resources:
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      limits: {}
      #   cpu: 100m
      #   memory: 128Mi
      requests: {}
      #   cpu: 100m
      #   memory: 128Mi

    ## Prometheus Exporter service configuration
    ##
    service:
      ## Annotations for Prometheus Exporter pods. Evaluated as a template.
      ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
      ##
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.metrics.service.port }}"
        prometheus.io/path: "/metrics"
      type: ClusterIP
      port: 9216

    ## Metrics exporter liveness and readiness probes
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)
    ##
    livenessProbe:
      enabled: true
      initialDelaySeconds: 15
      periodSeconds: 5
      timeoutSeconds: 5
      failureThreshold: 3
      successThreshold: 1
    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 5
      timeoutSeconds: 1
      failureThreshold: 3
      successThreshold: 1

    ## Prometheus Service Monitor
    ## ref: https://github.com/coreos/prometheus-operator
    ##      https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md
    ##
    serviceMonitor:
      ## If the operator is installed in your cluster, set to true to create a Service Monitor Entry
      enabled: false

      ## Specify the namespace where Prometheus Operator is running
      ##
      # namespace: monitoring

      ## Specify the interval at which metrics should be scraped
      ##
      interval: 30s
      ## Specify the timeout after which the scrape is ended
      ##
      # scrapeTimeout: 30s
      ## Used to pass Labels that are used by the Prometheus installed in your cluster to select Service Monitors to work with
      ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#prometheusspec
      ##
      additionalLabels: {}

    ## Custom PrometheusRule to be defined
    ## ref: https://github.com/coreos/prometheus-operator#customresourcedefinitions
    ##
    prometheusRule:
      enabled: false
      additionalLabels: {}
      ## Specify the namespace where Prometheus Operator is running
      ##
      # namespace: monitoring

      ## Define individual alerting rules as required
      ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#rulegroup
      ##      https://prometheus.io/docs/prometheus/latest/configuration/alerting_rules/
      ##
      ## This is an example of a rule, you should add the below code block under the "rules" param, removing the brackets
      ## - name: example
      ##   rules:
      ##   - alert: HighRequestLatency
      ##     expr: job:request_latency_seconds:mean5m{job="myjob"} > 0.5
      ##     for: 10m
      ##     labels:
      ##       severity: page
      ##     annotations:
      ##       summary: High request latency
      ##
      rules: {}

artemis:

  ## It is recommended NOT to scale Artemis beyond a single node. While
  ## Brigade's architecture can tolerate queues distributed across multiple
  ## nodes, it also derives no specific benefit from that topology. This being
  ## the case, there is a benefit to using only a single Artemis node-- namely
  ## that non-distributed queues are guaranteed to be properly FIFO, whilst no
  ## such guarantee can be made with respect to distributed queues. Using a
  ## single node therefore results in improved fairness in scheduling.
  ##
  ## The option to scale beyond a single node is preserved to account for
  ## operators who may eventually transition to an EXTERNAL AMQP 1.0 message
  ## broker that uses distributed queues and who may wish to experiment with
  ## such a configuration in advance.
  replicas: 1

  image:
    repository: brigadecore/brigade2-artemis
    ## tag should only be specified if you want to override Chart.appVersion
    ## The default tag is the value of .Chart.AppVersion
    # tag:
    pullPolicy: IfNotPresent

  username: brigade
  ## The password will be an auto-generated random string when not
  ## supplied. See NOTES.txt after deployment for retrieval steps.
  # password:

  ## Persist data to a volume
  persistence:
    enabled: true
    ## If undefined, the cluster's default storage class is used
    # storageClass:
    accessMode: ReadWriteOnce
    size: 8Gi

  ## Whether to run in a highly available configuration. This would be a good
  ## idea in a production environment, but shouldn't be needed otherwise.
  ha:
    enabled: false
    ## Valid values are "hard" and "soft"
    antiAffinity: soft

  resources: {}
    ## We usually recommend not to specify default resources and to leave this
    ## as a conscious choice for the user. This also increases chances charts
    ## run on environments with little resources, such as Minikube. If you do
    ## want to specify resources, uncomment the following lines, adjust them as
    ## necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  service:
    type: NodePort

externalAMQP:
  address:
  username:
  password:

azureServiceBus:
  address:
  username:
  password:
