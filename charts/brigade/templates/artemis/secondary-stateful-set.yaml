{{- if .Values.artemis.ha.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "brigade.artemis.fullname" . }}-secondary
  labels:
    {{- include "brigade.labels" . | nindent 4 }}
    {{- include "brigade.artemis.secondary.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "brigade.artemis.fullname" . }}-secondary
  replicas: {{ .Values.artemis.replicas }}
  updateStrategy:
    type: OnDelete
  selector:
    matchLabels:
      {{- include "brigade.selectorLabels" . | nindent 6 }}
      {{- include "brigade.artemis.secondary.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "brigade.selectorLabels" . | nindent 8 }}
        {{- include "brigade.artemis.secondary.labels" . | nindent 8 }}
      annotations:
        checksum/common-config: {{ include (print $.Template.BasePath "/artemis/common-config.yaml") . | sha256sum }}
        checksum/secondary-config: {{ include (print $.Template.BasePath "/artemis/secondary-config.yaml") . | sha256sum }}
    spec:
      affinity:
        podAntiAffinity:
          {{- if eq .Values.artemis.ha.antiAffinity "hard" }}
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: "kubernetes.io/hostname"
            labelSelector:
              matchLabels:
                {{- include "brigade.selectorLabels" . | nindent 16 }}
                {{- include "brigade.artemis.primary.labels" . | nindent 16 }}
          {{- else if eq .Values.artemis.ha.antiAffinity "soft" }}
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 5
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  {{- include "brigade.selectorLabels" . | nindent 18 }}
                  {{- include "brigade.artemis.primary.labels" . | nindent 18 }}
          {{- end }}
      initContainers:
      - name: config
        image: {{ .Values.artemis.image.repository }}:{{ default .Chart.AppVersion .Values.artemis.image.tag }}
        imagePullPolicy: {{ .Values.artemis.image.pullPolicy }}
        command: ["/bin/sh", "/opt/secondary-config/configure-secondary-node.sh"]
        volumeMounts:
          - name: common-config
            mountPath: /opt/common-config
          - name: secondary-config
            mountPath: /opt/secondary-config
          - name: config-overrides
            mountPath: /var/lib/artemis/etc-override
      containers:
      - name: artemis
        image: {{ .Values.artemis.image.repository }}:{{ default .Chart.AppVersion .Values.artemis.image.tag }}
        imagePullPolicy: {{ .Values.artemis.image.pullPolicy }}
        resources:
          {{- toYaml .Values.artemis.resources | indent 10 }}
        env:
        - name: ARTEMIS_USERNAME
          value: {{ .Values.artemis.username }}
        - name: ARTEMIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "brigade.artemis.fullname" . }}
              key: password
        ports:
        - name: http
          containerPort: 8161
        - name: core
          containerPort: 61616
        - name: amqp
          containerPort: 5672
        livenessProbe:
          tcpSocket:
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: core
          initialDelaySeconds: 10
          periodSeconds: 10
        startupProbe:
          tcpSocket:
            port: core
          failureThreshold: 30
          periodSeconds: 10
        volumeMounts:
        - name: config-overrides
          mountPath: /var/lib/artemis/etc-override
        - name: data
          mountPath: /var/lib/artemis/data
      volumes:
      - name: config-overrides
        emptyDir: {}
      - name: common-config
        secret:
          secretName: {{ include "brigade.artemis.fullname" . }}-common-config
      - name: secondary-config
        configMap:
          name: {{ include "brigade.artemis.fullname" . }}-secondary
      {{- if not .Values.artemis.persistence.enabled }}
      - name: data
        emptyDir: {}
      {{- end }}
      {{- if .Values.artemis.persistence.enabled }}
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        runAsNonRoot: true
      {{- end }}
  {{- if .Values.artemis.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      {{- if .Values.artemis.persistence.storageClass }}
      storageClassName: {{ .Values.artemis.persistence.storageClass }}
      {{- end }}
      accessModes: [ {{ .Values.artemis.persistence.accessMode }} ]
      resources:
        requests:
          storage: {{ .Values.artemis.persistence.size }}
  {{- end}}
{{- end }}
