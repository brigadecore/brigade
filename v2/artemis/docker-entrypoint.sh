#!/bin/sh
set -e

BROKER_HOME=/var/lib/artemis
OVERRIDE_PATH=$BROKER_HOME/etc-override
CONFIG_PATH=$BROKER_HOME/etc

# Create a broker instance. It's deliberate that we don't do this during image
# building and instead do it during container start. Some of the values in the
# configuration that is generated by this command are calculated based on
# resources. We want those to be accurate for where the container is running
# instead of reflecting where the image was built.
/opt/artemis/bin/artemis create artemis \
  --user "$ARTEMIS_USERNAME" \
  --password "$ARTEMIS_PASSWORD" \
  --role amq \
  --require-login \
  --cluster-user artemisCluster \
  --cluster-password simetraehcaparetsulc \
  --http-host 0.0.0.0 \
  --relax-jolokia \
  --aio \
  $BROKER_HOME

# Rename the broker to match the hostname.
xmlstarlet ed -L \
  -N activemq="urn:activemq" \
  -N core="urn:activemq:core" \
  -u "/activemq:configuration/core:core/core:name" \
  -v "$(hostname)" $CONFIG_PATH/broker.xml

# Find snippets of XML and merge them into the main config. This is how we can
# provide different configuration for primary and secondary nodes (for
# instance)-- by mounting different snippets into this path.
if [ -e $OVERRIDE_PATH ]; then
  for f in $(find $OVERRIDE_PATH -name "broker*.xml" -type f | sort -u ); do
    xmlstarlet tr $BROKER_HOME/assets/merge.xslt -s replace=true -s with="$f" "$CONFIG_PATH/broker.xml" > /tmp/broker-merge.xml
    mv /tmp/broker-merge.xml "$CONFIG_PATH/broker.xml"
  done
fi

# Only run the server if some other command wasn't requested. This is what
# allows this script to run on startup no matter what, while still allowing
# the image's entrypoint to effectively be overriden.
if [ "$1" = 'artemis-server' ]; then
  exec $BROKER_HOME/bin/artemis run
fi

exec "$@"
